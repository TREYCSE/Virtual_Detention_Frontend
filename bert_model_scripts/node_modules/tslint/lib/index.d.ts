/**
 * @license
 * Copyright 2013 Palantir Technologies, Inc.
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 *     http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */
import * as Configuration from "tslint/lib/configuration";
import * as Formatters from "tslint/lib/formatters";
import { FormatterConstructor } from "tslint/lib/language/formatter/formatter";
import { RuleFailure } from "tslint/lib/language/rule/rule";
import * as Rules from "tslint/lib/rules";
import * as Test from "tslint/lib/test";
import * as Utils from "tslint/lib/utils";
export { Configuration, Formatters, Rules, Test, Utils };
export * from "tslint/lib/linter";
export * from "tslint/lib/language/rule/rule";
export * from "tslint/lib/enableDisableRules";
export * from "tslint/lib/formatterLoader";
export * from "tslint/lib/ruleLoader";
export * from "tslint/lib/language/utils";
export * from "tslint/lib/language/walker";
export * from "tslint/lib/language/formatter/formatter";
export interface LintResult {
    errorCount: number;
    warningCount: number;
    failures: RuleFailure[];
    fixes?: RuleFailure[];
    format: string | FormatterConstructor;
    output: string;
}
export interface ILinterOptions {
    fix: boolean;
    formatter?: string | FormatterConstructor;
    formattersDirectory?: string;
    quiet?: boolean;
    rulesDirectory?: string | string[];
}
